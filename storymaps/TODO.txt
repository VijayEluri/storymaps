High Priority
-------------

*   Listen for the window changing size and zoom the piccolo camera to fit, 
    especially when the application first starts.

*   Changing levels of detail on story cards.

*   Hide/Show the StoryEditor, and have the Piccolo camera show only the 
    StoryMap when the StoryEditor is shown. Will the cards be big enough to read
    the instruction text? Or should the instruction text show up in the
    StoryEditor?

*   Build as an executable jar file and as an applet, then you can get people
    testing it.
    NetBeans already builds it as a jar file, but it can't find any of the
    images or other data files. No idea how to build as an applet.

*   Swing file selector dialogs for save and restore.

*   Implement text export of story documents. Do this by adding toString()
    methods to all the memento objects.

*   Get the toolbar looking right. Icons should be flush left, and there should
    be Help and About buttons.

*   Allow the user to give their story a title, add a JTextField labelled Title
    into the StoryEditor, and have the JTextField itself be stored with the
    StoryMap (and its memento).

*   StoryEditor should focus a card when the card is double-clicked (zoomed in 
    on).

*   Get the descriptions of the Propp functions on the cards right.

*   Support ordering of story cards by having a 'Sort' button on the story map,
    and perhaps having numbers on the story cards.

Low Priority
------------

*   Testing, bug fixing and refactoring.

*   Bug in StoryEditor when removing cards: last card still appears, and gaps
    appear between cards, until window is refreshed.

*   Show a text icon on StoryCard when it has some user text associated with it.
             
+   Make StoryMap highlight the currently selected StoryCard, the one that is
    focused in StoryEditor. If the user changes the focus in StoryEditor,
    StoryMap should respond. This is going to require changing the relationship
    between StoryMap and StoryEditor, instead of StoryMap holding a reference to
    StoryEditor or vice-versa they need two-way communication.
        
StoryCard:

*   Animated scaling
*   Fix image transparency problem on disabled story cards.
    
Other:

*   Change the mouse cursor to indicate actions when over a story card or when 
    dragging a story card over a story map?
    
*   The zoom out needs to zoom out a little further. Implement home node as a
    decorator node with padding? Or just zoom further.
    
*   When zoomed in there should be left, right up & down arrows buttons on 
    the overlay to move from card to card, instead of clicking on the cards.
    This allows moving around without having to zoom out when there are gaps
    between the cards. Perhaps the camera should zoom to focus on the 
    placeholder behind the card rather than the card itself? Also might want 
    to make story cards not draggable or scaleable when zoomed in.     
    
*   Make it use nicer fonts.    

*   Cut, Copy and Paste buttons on the FunctionEditors or on the StoryEditor?
        
Refactoring
-----------

*   Quite a lot of duplicated code between StoryMap and StoryCards. Fix this by
    moving code into StoryBase. Will require use of a common interface of 
    Placeholder and DisabledStoryCard.

*   Get test package and jar and applet builds committed to git.

*   FunctionEditor shouldn't need to keep a reference to a Function. Is this
    being made use of anywhere? StoryCard should just pass the image URL to the
    FunctionEditor constructor instead, FunctionEditor doesn't know what
    function it represents, but StoryCard does.